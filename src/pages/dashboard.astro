---
export const prerender = false;

// Auth is provided by middleware in locals
const userId = Astro.locals.userId;

if (!userId) {
  return Astro.redirect('/sign-in');
}
---

<html lang="en" data-theme="appstoagents-dark">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Dashboard - ARA System</title>
  <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@100;200;300;400;500;600;700;800;900&display=swap" rel="stylesheet">
</head>
<body class="min-h-screen bg-base-100 text-base-content antialiased">
  <div class="navbar bg-base-200/50 backdrop-blur-sm border-b border-base-300/20">
    <div class="flex-1">
      <a class="btn btn-ghost text-xl font-semibold text-primary hover:text-primary-focus transition-colors duration-200">
        ARA Dashboard
      </a>
    </div>
    <div class="flex-none">
      <div class="dropdown dropdown-end">
        <div tabindex="0" role="button" class="btn btn-ghost btn-circle avatar hover:scale-105 transition-transform duration-200">
          <div class="w-10 rounded-full">
            <img id="user-avatar" alt="User avatar" src="" class="rounded-full border-2 border-primary/30" />
          </div>
        </div>
        <ul tabindex="0" class="menu menu-sm dropdown-content bg-base-200 border border-base-300/30 rounded-box z-[1] mt-3 w-52 p-2 shadow-xl backdrop-blur-sm">
          <li><a href="/wizard" class="hover:bg-primary/10 transition-colors duration-200">Start Audit</a></li>
          <li><a href="/reports" class="hover:bg-accent/10 transition-colors duration-200">My Reports</a></li>
          <li><a id="sign-out" class="hover:bg-error/10 text-error transition-colors duration-200">Sign out</a></li>
        </ul>
      </div>
    </div>
  </div>

  <div class="container mx-auto p-6 max-w-7xl">
    <div class="mb-8">
      <h1 class="text-4xl font-bold bg-gradient-to-r from-primary to-accent bg-clip-text text-transparent mb-2">
        Welcome to ARA Dashboard
      </h1>
      <p class="text-base-content/70 text-lg">
        Manage your AI readiness assessments and track your organization's progress
      </p>
    </div>
    
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
      <div class="card bg-base-200/30 backdrop-blur-sm border border-base-300/20 hover:border-primary/40 shadow-lg hover:shadow-xl hover:shadow-primary/10 transition-all duration-300 group">
        <div class="card-body p-6">
          <div class="flex items-start justify-between mb-4">
            <div class="w-12 h-12 rounded-lg bg-primary/20 flex items-center justify-center text-primary group-hover:scale-110 transition-transform duration-200">
              <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
              </svg>
            </div>
          </div>
          <h2 class="card-title text-xl font-bold text-base-content mb-2">Agent Readiness Audit</h2>
          <p class="text-base-content/70 mb-6 leading-relaxed">
            Assess your organization's readiness for AI agent implementation with our comprehensive evaluation system.
          </p>
          <div class="card-actions">
            <a href="/wizard" class="btn btn-primary w-full hover:scale-105 transition-transform duration-200">
              Start Audit
            </a>
          </div>
        </div>
      </div>

      <div class="card bg-base-200/30 backdrop-blur-sm border border-base-300/20 hover:border-accent/40 shadow-lg hover:shadow-xl hover:shadow-accent/10 transition-all duration-300 group">
        <div class="card-body p-6">
          <div class="flex items-start justify-between mb-4">
            <div class="w-12 h-12 rounded-lg bg-accent/20 flex items-center justify-center text-accent group-hover:scale-110 transition-transform duration-200">
              <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 17v-2a4 4 0 0 0-4-4H4a2 2 0 0 0-2 2v6a2 2 0 0 0 2 2h2a4 4 0 0 0 4-4zm8-12V3a2 2 0 0 0-2-2h-4a2 2 0 0 0-2 2v2m4 8h2a2 2 0 0 0 2-2V9a2 2 0 0 0-2-2h-2m-8 8v2a2 2 0 0 0 2 2h4a2 2 0 0 0 2-2v-2"></path>
              </svg>
            </div>
          </div>
          <h2 class="card-title text-xl font-bold text-base-content mb-2">My Reports</h2>
          <p class="text-base-content/70 mb-6 leading-relaxed">
            View, download, and analyze your completed audit reports with detailed insights and recommendations.
          </p>
          <div class="card-actions">
            <a href="/reports" class="btn btn-outline border-accent hover:bg-accent w-full hover:scale-105 transition-transform duration-200">
              View Reports
            </a>
          </div>
        </div>
      </div>

      <div class="card bg-base-200/30 backdrop-blur-sm border border-base-300/20 hover:border-success/40 shadow-lg hover:shadow-xl hover:shadow-success/10 transition-all duration-300 group">
        <div class="card-body p-6">
          <div class="flex items-start justify-between mb-4">
            <div class="w-12 h-12 rounded-lg bg-success/20 flex items-center justify-center text-success group-hover:scale-110 transition-transform duration-200">
              <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7h8m0 0v8m0-8l-8 8-4-4-6 6"></path>
              </svg>
            </div>
          </div>
          <h2 class="card-title text-xl font-bold text-base-content mb-2">Progress Tracking</h2>
          <p class="text-base-content/70 mb-6 leading-relaxed">
            Monitor your organization's AI readiness improvement over time with detailed analytics and trends.
          </p>
          <div class="card-actions">
            <a href="/progress" class="btn btn-outline border-success hover:bg-success w-full hover:scale-105 transition-transform duration-200">
              View Progress
            </a>
          </div>
        </div>
      </div>
    </div>

    <!-- Quick stats section -->
    <div class="mt-12 grid grid-cols-1 md:grid-cols-4 gap-4">
      <div class="stat bg-base-200/30 backdrop-blur-sm border border-base-300/20 rounded-lg">
        <div class="stat-title text-base-content/60">Total Audits</div>
        <div class="stat-value text-primary">0</div>
      </div>
      <div class="stat bg-base-200/30 backdrop-blur-sm border border-base-300/20 rounded-lg">
        <div class="stat-title text-base-content/60">Completed</div>
        <div class="stat-value text-accent">0</div>
      </div>
      <div class="stat bg-base-200/30 backdrop-blur-sm border border-base-300/20 rounded-lg">
        <div class="stat-title text-base-content/60">Average Score</div>
        <div class="stat-value text-success">-</div>
      </div>
      <div class="stat bg-base-200/30 backdrop-blur-sm border border-base-300/20 rounded-lg">
        <div class="stat-title text-base-content/60">Reports Generated</div>
        <div class="stat-value text-warning">0</div>
      </div>
    </div>
  </div>

  <script>
    import { Clerk } from '@clerk/clerk-js';
    
    const publishableKey = import.meta.env.PUBLIC_CLERK_PUBLISHABLE_KEY;
    
    if (!publishableKey) {
      throw new Error('Missing Clerk Publishable Key');
    }
    
    // Wrap in async function to avoid top-level await
    (async () => {
      const clerk = new Clerk(publishableKey);
      await clerk.load();
      
      // Update user avatar
      const user = clerk.user;
      const avatarImg = document.getElementById('user-avatar');
      if (user && avatarImg) {
        avatarImg.src = user.imageUrl || '/default-avatar.png';
      }
      
      // Handle guest session conversion for new signups
      const urlParams = new URLSearchParams(window.location.search);
      if (urlParams.get('signup') === 'true' && user) {
        try {
          console.log('ðŸ”„ Converting guest session for new user:', user.id);
          
          const response = await fetch('/api/guest/convert-session', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({ userId: user.id }),
          });

          if (response.ok) {
            const data = await response.json();
            console.log('âœ… Guest session converted successfully:', data);
            
            // Show success message
            const toast = document.createElement('div');
            toast.className = 'toast toast-top toast-end z-50';
            toast.innerHTML = `
              <div class="alert alert-success">
                <svg xmlns="http://www.w3.org/2000/svg" class="stroke-current shrink-0 h-6 w-6" fill="none" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
                </svg>
                <span>âœ… Your progress has been saved to your account!</span>
              </div>
            `;
            document.body.appendChild(toast);
            
            // Remove toast after 5 seconds
            setTimeout(() => {
              document.body.removeChild(toast);
            }, 5000);
          } else {
            console.warn('Guest session conversion failed:', response.statusText);
          }
        } catch (error) {
          console.error('Error converting guest session:', error);
        }
        
        // Clean up URL parameter
        window.history.replaceState({}, document.title, '/dashboard');
      }
      
      // Handle sign out
      const signOutBtn = document.getElementById('sign-out');
      if (signOutBtn) {
        signOutBtn.addEventListener('click', async () => {
          await clerk.signOut();
          window.location.href = '/';
        });
      }
    })();
  </script>
</body>
</html>